// Generated by CoffeeScript 1.6.3
(function() {
  var VerletLayout,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  VerletLayout = (function() {
    function VerletLayout(selector) {
      this.selector = selector;
      this._redraw = __bind(this._redraw, this);
      this._loop = __bind(this._loop, this);
      this._setup = __bind(this._setup, this);
      this.grow = __bind(this.grow, this);
      this.roots = [new Blue(), new Red(), new Blue(), new Blue(), new Red(), new Red()];
      this.outerLayer = this.roots;
      this._setup();
      this._redraw();
    }

    VerletLayout.prototype.grow = function() {
      var child, firstChild, growth, lastChild, parent, _i, _j, _len, _len1, _ref, _ref1;
      console.log("Grow!");
      growth = [];
      firstChild = null;
      lastChild = null;
      _ref = this.outerLayer;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        parent = _ref[_i];
        _ref1 = parent.grow();
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          child = _ref1[_j];
          if (firstChild == null) {
            firstChild = child;
          }
          this.nodes.push(child);
          this.links.push({
            source: parent,
            target: child
          });
          if (lastChild != null) {
            this.links.push({
              source: lastChild,
              target: child,
              strength: 0.5
            });
          }
          growth.push(child);
          lastChild = child;
        }
      }
      this.links.push({
        source: lastChild,
        target: firstChild,
        strength: 0.5
      });
      this.outerLayer = growth;
      return this._redraw();
    };

    VerletLayout.prototype._setup = function() {
      var canvas, dpr, height, pin, segment, tire1, tire2, tire3, width;
      console.log("setup");
      this.nodes = this.outerLayer;
      this.links = [];
      canvas = document.getElementById(this.selector);
      width = parseInt(canvas.style.width);
      height = parseInt(canvas.style.height);
      dpr = window.devicePixelRatio || 1;
      canvas.width = width * dpr;
      canvas.height = height * dpr;
      canvas.getContext("2d").scale(dpr, dpr);
      this.sim = new VerletJS(width, height, canvas);
      this.sim.friction = 1;
      segment = this.sim.lineSegments([new Vec2(20, 10), new Vec2(40, 10), new Vec2(60, 10), new Vec2(80, 10), new Vec2(100, 10)], 0.02);
      pin = segment.pin(0);
      pin = segment.pin(4);
      tire1 = this.sim.tire(new Vec2(200, 50), 50, 30, 0.3, 0.9);
      tire2 = this.sim.tire(new Vec2(400, 50), 70, 7, 0.1, 0.2);
      tire3 = this.sim.tire(new Vec2(600, 50), 70, 3, 1, 1);
      return this._loop();
    };

    VerletLayout.prototype._loop = function() {
      this.sim.frame(16);
      this.sim.draw();
      return window.requestAnimFrame(this._loop);
    };

    VerletLayout.prototype._redraw = function() {
      return console.log("redraw");
    };

    return VerletLayout;

  })();

  window.VerletLayout = VerletLayout;

}).call(this);
